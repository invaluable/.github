name: Java 17 Docker CI

on:
  push:
    branches:
      - master
      - main
      - develop
      - $default-branch
  pull_request:

jobs:
  pipeline:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Set up Corretto JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5

      - name: Build with Maven
        id: build
        env:
          SPRING_PROFILES_ACTIVE: test
        run: |
          current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed s/-SNAPSHOT//)
          echo "current_version=${current_version}" >> $GITHUB_OUTPUT

          # If master/main, put the non-SNAPSHOT version in the pom file first
          if [[ "${GIT_REF}" =~ "refs/heads/(master|main)" ]]; then
            mvn -DdevelopmentVersion=${current_version} release:update-versions
          fi

          mvn --batch-mode --update-snapshots package test surefire-report:report
      # Uncomment once there are tests
      # - name: Publish Test Report
      #   uses: mikepenz/action-junit-report@v3
      #   if: success() || failure()
      #   with:
      #     report_paths: '**/build/test-results/test/TEST-*.xml'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push docker container image to Amazon ECR
        env:
          ECR_REGISTRY: 990291711854.dkr.ecr.us-east-2.amazonaws.com
          ECR_REPOSITORY: twilio-svc
          current_version: ${{ steps.build.outputs.current_version }}
        run: |
          if [[ "${GIT_REF}" =~ "refs/heads/(master|main)" ]]; then
            docker_tag="${current_version}"
          elif [[ "${GIT_REF}" == "refs/heads/develop" ]]; then
            docker_tag="${current_version}-SNAPSHOT"
          elif [[ '${{ github.event_name }}' == 'pull_request' ]]; then
            pr_number=$(echo ${GITHUB_REF} | cut -d'/' -f3)
            docker_tag="pr-${pr_number}"
          else
            branch_name=$(echo ${GITHUB_REF} | cut -d'/' -f3)
            docker_tag="${branch_name::32}"
          fi

          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$docker_tag .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$docker_tag

      - name: Commit new version and tag to SCM
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
        env:
          current_version: ${{ steps.build.outputs.current_version }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "ops@invaluable.com"

          new_version=${current_version%.*.*}.$(expr ${${current_version%.*}##*.} + 1).0
          mvn -DdevelopmentVersion=${new_version}-SNAPSHOT release:update-versions

          git add pom.xml
          git commit -m "Incrementing version to ${new_version}"
          git tag -a ${new_version} -m "Incrementing version to ${new_version}"
          git push
          git push --tags
          git checkout develop
          git merge master
          git push

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
